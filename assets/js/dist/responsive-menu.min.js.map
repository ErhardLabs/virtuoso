{"version":3,"sources":["responsive-menu.min.js"],"names":["document","$","undefined","addClass","virtuoso","mainMenuButtonClass","subMenuButtonClass","_combineMenus","window","innerWidth","appendTo","hide","removeAttr","show","_addClassID","$this","this","nav","next","id","attr","_doResize","buttons","superfish","_getDisplayValue","delay","animation","opacity","height","dropShadows","_superfishToggle","startLink","endLink","each","link","replace","_changeSkipLink","removeClass","_maybeClose","_mainmenuToggle","_toggleAria","toggleClass","slideToggle","_submenuToggle","others","closest","siblings","find","slideUp","$id","element","getElementById","getComputedStyle","getPropertyValue","attribute","index","value","init","toggleButtons","menu","class","aria-expanded","aria-pressed","role","append","params","mainMenu","submenu","text","subMenu","length","before","on","triggerHandler","ready","resize","virtuosoLocalizedArgs","click","e","hasClass","css","margin","overflow","jQuery"],"mappings":"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","file":"responsive-menu.min.js","sourcesContent":["'use strict';\n\n(function (document, $, undefined) {\n\n  $('body').addClass('js');\n\n  'use strict';\n\n  var virtuoso = {},\n      mainMenuButtonClass = 'menu-toggle',\n      subMenuButtonClass = 'sub-menu-toggle';\n\n  virtuoso.init = function () {\n    var toggleButtons = {\n      menu: $('<button />', {\n        'class': mainMenuButtonClass,\n        'aria-expanded': false,\n        'aria-pressed': false,\n        'role': 'button'\n      }).append(virtuoso.params.mainMenu),\n      submenu: $('<button />', {\n        'class': subMenuButtonClass,\n        'aria-expanded': false,\n        'aria-pressed': false,\n        'role': 'button'\n      }).append($('<span />', {\n        'class': 'screen-reader-text',\n        text: virtuoso.params.subMenu\n      }))\n    };\n\n    if ($('.nav-primary').length > 0) {\n      $('.nav-primary').before(toggleButtons.menu); // add the main nav buttons\n    } else {\n      $('.nav-header').before(toggleButtons.menu);\n    }\n    $('nav .sub-menu').before(toggleButtons.submenu); // add the submenu nav buttons\n    $('.' + mainMenuButtonClass).each(_addClassID);\n    $('.' + subMenuButtonClass).addClass('dashicons-before dashicons-arrow-down');\n    $(window).on('resize.virtuoso', _doResize).triggerHandler('resize.virtuoso');\n    $('.' + mainMenuButtonClass).on('click.virtuoso-mainbutton', _mainmenuToggle);\n    $('.' + subMenuButtonClass).on('click.virtuoso-subbutton', _submenuToggle);\n  };\n\n  /**\r\n   * Combine Primary and Secondary menus into one menu for mobile responsiveness\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _combineMenus() {\n    if (window.innerWidth <= 769) {\n\n      $('ul.menu-secondary > li').addClass('moved-item'); // tag moved items so we can move them back\n      $('ul.menu-secondary > li').appendTo('ul.menu-primary');\n      $('.nav-secondary').hide();\n    }\n\n    if (window.innerWidth > 768) {\n      $('.nav-primary .genesis-nav-menu, nav .sub-menu').removeAttr('style');\n      $('.nav-secondary').show();\n      $('ul.menu-primary > li.moved-item').appendTo('ul.menu-secondary');\n    }\n  }\n\n  /**\r\n   * Add nav class and ID to related button\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _addClassID() {\n    var $this = $(this),\n        nav = $this.next('nav'),\n        id = 'class';\n    if ($(nav).attr('id')) {\n      id = 'id';\n    }\n    $this.attr('id', 'mobile-' + $(nav).attr(id));\n  }\n\n  /**\r\n   * Change Skiplinks and Superfish\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _doResize() {\n    var buttons = $('button[id^=\"mobile-\"]').attr('id');\n    if (typeof buttons === 'undefined') {\n      return;\n    }\n    _superfishToggle(buttons);\n    _changeSkipLink(buttons);\n    _maybeClose(buttons);\n  }\n\n  /**\r\n   * Action when the main menu button is clicked\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _mainmenuToggle() {\n    var $this = $(this);\n    _toggleAria($this, 'aria-pressed');\n    _toggleAria($this, 'aria-expanded');\n    $this.toggleClass('activated');\n    $this.next('nav, .sub-menu').slideToggle('fast');\n  }\n\n  /**\r\n   * Action for submenu toggles\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _submenuToggle() {\n\n    var $this = $(this),\n        others = $this.closest('.menu-item').siblings();\n    _toggleAria($this, 'aria-pressed');\n    _toggleAria($this, 'aria-expanded');\n    $this.toggleClass('activated');\n    $this.next('.sub-menu').slideToggle('fast');\n\n    others.find('.' + subMenuButtonClass).removeClass('activated').attr('aria-pressed', 'false');\n    others.find('.sub-menu').slideUp('fast');\n  }\n\n  /**\r\n   * activate/deactivate superfish\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _superfishToggle(buttons) {\n    if (typeof $('.js-superfish').superfish !== 'function') {\n      return;\n    }\n    if ('none' === _getDisplayValue(buttons)) {\n      $('.js-superfish').superfish({\n        'delay': 100,\n        'animation': { 'opacity': 'show', 'height': 'show' },\n        'dropShadows': false\n      });\n    } else {\n      $('.js-superfish').superfish('destroy');\n    }\n  }\n\n  /**\r\n   * Modify skip links to match mobile buttons\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _changeSkipLink(buttons) {\n    var startLink = 'genesis-nav',\n        endLink = 'mobile-genesis-nav';\n    if ('none' === _getDisplayValue(buttons)) {\n      startLink = 'mobile-genesis-nav';\n      endLink = 'genesis-nav';\n    }\n    $('.genesis-skip-link a[href^=\"#' + startLink + '\"]').each(function () {\n      var link = $(this).attr('href');\n      link = link.replace(startLink, endLink);\n      $(this).attr('href', link);\n    });\n  }\n\n  /**\r\n   * Should the submenus be closed?\r\n   *\r\n   * @return void\r\n   *\r\n   */\n  function _maybeClose(buttons) {\n    if ('none' !== _getDisplayValue(buttons)) {\n      return;\n    }\n    $('.menu-toggle, .sub-menu-toggle').removeClass('activated').attr('aria-expanded', false).attr('aria-pressed', false);\n    $('nav, .sub-menu').attr('style', '');\n  }\n\n  /**\r\n   * Get the display value of an element\r\n   *\r\n   * @param  {id} $id ID to check\r\n   *\r\n   * @return {string}     CSS value of display property\r\n   *\r\n   */\n  function _getDisplayValue($id) {\n    var element = document.getElementById($id),\n        style = window.getComputedStyle(element);\n    return style.getPropertyValue('display');\n  }\n\n  /**\r\n   * Toggle aria attributes\r\n   *\r\n   * @param  {button} $this     passed through\r\n   * @param  {aria-xx} attribute aria attribute to toggle\r\n   *\r\n   * @return {bool}           from _ariaReturn\r\n   *\r\n   */\n  function _toggleAria($this, attribute) {\n    $this.attr(attribute, function (index, value) {\n      return 'false' === value;\n    });\n  }\n\n  $(document).ready(function () {\n\n    // Check to see if menus should be combined on initial page load\n    _combineMenus();\n\n    // Check to see if menus should be combined on resize of the window\n    $(window).resize(function () {\n      _combineMenus();\n    });\n\n    virtuoso.params = typeof virtuosoLocalizedArgs === 'undefined' ? '' : virtuosoLocalizedArgs;\n\n    if (typeof virtuoso.params !== 'undefined') {\n      virtuoso.init();\n    }\n\n    $('.menu-toggle').click(function (e) {\n\n      if ($('.menu-toggle').hasClass('activated')) {\n\n        //Prevent page scrolling if mobile menu is activated\n        $('html, body').css({\n          margin: 0,\n          height: '100%',\n          overflow: 'hidden'\n        });\n      } else {\n\n        $('html, body').css({\n          margin: 0,\n          height: 'unset',\n          overflow: 'unset'\n        });\n      }\n    });\n  });\n})(document, jQuery);"]}